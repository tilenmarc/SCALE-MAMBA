
# Use IEEE equivalent sizes
sfloat.plen=11
sfloat.vlen=53
sfloat.kappa=40
# Means we need 148 bit prime at least

FP_add=120
FP_mul=121
FP_div=122
FP_eq=123
FP_f2i=124
FP_i2f=125
FP_sqrt=126

r0=convert_to_float("3.125")
print_ieee_float(r0)
print_ln("")
print_int(r0)
print_ln("")

r1=convert_to_float("1.25")
print_ieee_float(r1)
print_ln("")

r2=convert_to_float("-6.535353")
print_ieee_float(r2)
print_ln("")

r3=convert_to_float("199.3231")
print_ieee_float(r3)
print_ln("")

s0=sregint(r0)
s1=sregint(r1)
s2=sregint(r2)
s3=sregint(r3)

# A non-timed execution here to warm up the GC engine
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
sregint.push(s3)
GC(FP_add)
GC(FP_add)
s4=sregint.pop()
s5=sregint.pop()

print_ln("GC + ")
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
sregint.push(s3)
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
sregint.push(s3)
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
start_timer(1)
GC(FP_add)
GC(FP_add)
GC(FP_add)
GC(FP_add)
GC(FP_add)
GC(FP_add)
GC(FP_add)
GC(FP_add)
GC(FP_add)
GC(FP_add)
stop_timer(1)



print_ln("GC * ")
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
sregint.push(s3)
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
sregint.push(s3)
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
start_timer(1)
GC(FP_mul)
GC(FP_mul)
GC(FP_mul)
GC(FP_mul)
GC(FP_mul)
GC(FP_mul)
GC(FP_mul)
GC(FP_mul)
GC(FP_mul)
GC(FP_mul)
stop_timer(1)



print_ln("GC / ")
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
sregint.push(s3)
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
sregint.push(s3)
sregint.push(s0)
sregint.push(s1)
sregint.push(s2)
sregint.push(s3)
start_timer(1)
GC(FP_div)
GC(FP_div)
GC(FP_div)
GC(FP_div)
GC(FP_div)
GC(FP_div)
GC(FP_div)
GC(FP_div)
GC(FP_div)
GC(FP_div)
stop_timer(1)


print_ln("GC sqrt ")
sregint.push(s0)
start_timer(1)
GC(FP_sqrt)
GC(FP_sqrt)
GC(FP_sqrt)
GC(FP_sqrt)
GC(FP_sqrt)
GC(FP_sqrt)
GC(FP_sqrt)
GC(FP_sqrt)
GC(FP_sqrt)
GC(FP_sqrt)
stop_timer(1)
s4=sregint.pop()



x=sfloat(-.3133131)
y=sfloat(45.54242)

print_ln("")
print_ln("")
print_ln("sfloat +")
start_timer(1)
z=x+y
w=x+y
a=x+y
b=x+y
c=x+y
z1=x+y
w1=x+y
a1=x+y
b1=x+y
c1=x+y
stop_timer(1)
z.reveal().print_float()
w.reveal().print_float()
a.reveal().print_float()
b.reveal().print_float()
c.reveal().print_float()
z1.reveal().print_float()
w1.reveal().print_float()
a1.reveal().print_float()
b1.reveal().print_float()
c1.reveal().print_float()

print_ln("")
print_ln("sfloat *")
start_timer(1)
z=x*y
w=x*y
a=x*y
b=x*y
c=x*y
z1=x*y
w1=x*y
a1=x*y
b1=x*y
c1=x*y
stop_timer(1)
z.reveal().print_float()
w.reveal().print_float()
a.reveal().print_float()
b.reveal().print_float()
c.reveal().print_float()
z1.reveal().print_float()
w1.reveal().print_float()
a1.reveal().print_float()
b1.reveal().print_float()
c1.reveal().print_float()


print_ln("")
print_ln("sfloat /")
start_timer(1)
z=x/y
w=x/y
a=x/y
b=x/y
c=x/y
z1=x/y
w1=x/y
a1=x/y
b1=x/y
c1=x/y
stop_timer(1)
z.reveal().print_float()
w.reveal().print_float()
a.reveal().print_float()
b.reveal().print_float()
c.reveal().print_float()
z1.reveal().print_float()
w1.reveal().print_float()
a1.reveal().print_float()
b1.reveal().print_float()
c1.reveal().print_float()


x=sfix(-.3133131)
y=sfix(45.54242)

print_ln("")
print_ln("")
print_ln("sfix +")
start_timer(1)
z=x+y
w=x+y
a=x+y
b=x+y
c=x+y
z1=x+y
w1=x+y
a1=x+y
b1=x+y
c1=x+y
stop_timer(1)
z.reveal().print_fix()
w.reveal().print_fix()
a.reveal().print_fix()
b.reveal().print_fix()
c.reveal().print_fix()
z1.reveal().print_fix()
w1.reveal().print_fix()
a1.reveal().print_fix()
b1.reveal().print_fix()
c1.reveal().print_fix()

print_ln("")
print_ln("sfix *")
start_timer(1)
z=x*y
w=x*y
a=x*y
b=x*y
c=x*y
z1=x*y
w1=x*y
a1=x*y
b1=x*y
c1=x*y
stop_timer(1)
z.reveal().print_fix()
w.reveal().print_fix()
a.reveal().print_fix()
b.reveal().print_fix()
c.reveal().print_fix()
z1.reveal().print_fix()
w1.reveal().print_fix()
a1.reveal().print_fix()
b1.reveal().print_fix()
c1.reveal().print_fix()


print_ln("")
print_ln("sfix /")
start_timer(1)
z=x/y
w=x/y
a=x/y
b=x/y
c=x/y
z1=x/y
w1=x/y
a1=x/y
b1=x/y
c1=x/y
stop_timer(1)
z.reveal().print_fix()
w.reveal().print_fix()
a.reveal().print_fix()
b.reveal().print_fix()
c.reveal().print_fix()
z1.reveal().print_fix()
w1.reveal().print_fix()
a1.reveal().print_fix()
b1.reveal().print_fix()
c1.reveal().print_fix()


print_ln("")
print_ln("sfix sqrt")
start_timer(1)
z=mpc_math.sqrt(x)
w=mpc_math.sqrt(y)
a=mpc_math.sqrt(y)
b=mpc_math.sqrt(y)
c=mpc_math.sqrt(y)
z1=mpc_math.sqrt(x)
w1=mpc_math.sqrt(y)
a1=mpc_math.sqrt(y)
b1=mpc_math.sqrt(y)
c1=mpc_math.sqrt(y)
stop_timer(1)
z.reveal().print_fix()
w.reveal().print_fix()
a.reveal().print_fix()
b.reveal().print_fix()
c.reveal().print_fix()
z1.reveal().print_fix()
w1.reveal().print_fix()
a1.reveal().print_fix()
b1.reveal().print_fix()
c1.reveal().print_fix()
